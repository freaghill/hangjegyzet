name: Deploy to Production

on:
  push:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual deployment'
        required: true
      skip_tests:
        description: 'Skip tests (emergency only)'
        required: false
        default: 'false'
        type: choice
        options:
          - 'false'
          - 'true'

env:
  NODE_VERSION: '20.x'
  PRODUCTION_URL: 'https://hangjegyzet.hu'

jobs:
  pre-deploy-checks:
    name: Pre-deployment Checks
    runs-on: ubuntu-latest
    outputs:
      should_deploy: ${{ steps.check.outputs.should_deploy }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check deployment conditions
        id: check
        run: |
          # Check if this is a hotfix or regular deployment
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "Manual deployment requested: ${{ github.event.inputs.reason }}"
            echo "should_deploy=true" >> $GITHUB_OUTPUT
          else
            # Check if there are actual changes to deploy
            CHANGES=$(git diff HEAD~1 --name-only | grep -E '\.(ts|tsx|js|jsx|json|yml|yaml)$' | wc -l)
            if [ $CHANGES -gt 0 ]; then
              echo "Found $CHANGES changed files"
              echo "should_deploy=true" >> $GITHUB_OUTPUT
            else
              echo "No deployable changes found"
              echo "should_deploy=false" >> $GITHUB_OUTPUT
            fi
          fi

  test:
    name: Production Tests
    needs: [pre-deploy-checks]
    if: needs.pre-deploy-checks.outputs.should_deploy == 'true' && github.event.inputs.skip_tests != 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

