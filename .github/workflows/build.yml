name: Build and Test

on:
  push:
    branches: [ main, develop, 'build/**', 'fix/**' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Create env file
      run: |
        echo "Creating .env.local with placeholder values for build"
        cp .env.example .env.local || echo "No .env.example found, creating minimal .env.local"
        # Add minimal required env vars for build
        echo "NEXT_PUBLIC_SUPABASE_URL=https://placeholder.supabase.co" >> .env.local
        echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=placeholder" >> .env.local
        echo "SUPABASE_SERVICE_ROLE_KEY=placeholder" >> .env.local
        echo "STRIPE_SECRET_KEY=placeholder" >> .env.local
        echo "NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=placeholder" >> .env.local
        echo "SENDGRID_API_KEY=placeholder" >> .env.local
        echo "DATABASE_URL=postgresql://placeholder" >> .env.local
    
    - name: Run linter
      run: npm run lint || true
      
    - name: Type check
      run: npm run type-check || npx tsc --noEmit || true
    
    - name: Build project
      run: npm run build
      env:
        NODE_OPTIONS: '--max-old-space-size=4096'
        NEXT_TELEMETRY_DISABLED: 1
    
    - name: Run tests
      run: npm test -- --passWithNoTests || true
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: build-artifacts-${{ matrix.node-version }}
        path: .next/
        retention-days: 1